plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'therouter'
}

apply from: '../dependencies.gradle'

def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(new File("${project.getProjectDir()}/keystore.properties")))

android {
    namespace 'com.mcgrady.xproject'
    compileSdk versions.compileSdk

    defaultConfig {
        applicationId "com.mcgrady.xproject"
        minSdk versions.minSdk
        targetSdk versions.targetSdk
        versionCode versions.versionCode
        versionName versions.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['releaseKeyAlias']
            keyPassword keystoreProperties['releaseKeyPassword']
            storeFile file(keystoreProperties['releaseStoreFile'])
            storePassword keystoreProperties['releaseStorePassword']
        }
        debug {
            keyAlias keystoreProperties['debugKeyAlias']
            keyPassword keystoreProperties['debugKeyPassword']
            storeFile file(keystoreProperties['debugStoreFile'])
            storePassword keystoreProperties['debugStorePassword']
        }
    }

    buildTypes {
        release {
            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type.
            minifyEnabled false
            zipAlignEnabled = false
            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            shrinkResources false
            // Includes the default ProGuard rules files that are packaged with
            // the Android Gradle plugin. To learn more, go to the section about
            // R8 configuration files.
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // As of Gradle Android plugin 1.1.0, the test APK has a separate config
            testProguardFile 'proguard-rules-test.pro'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        viewBinding = true
    }
}

dependencies {
    implementation project(':common-core')
    implementation project(':common-widget')

    if (!isBuildModule.toBoolean()) {
        runtimeOnly project(path: ':module-account')
        runtimeOnly project(path: ':module-pokemon')
        runtimeOnly project(path: ':module-zhihu')
    }

    //hilt
    implementation "com.google.dagger:hilt-android:${versions.hilt}"
    kapt "com.google.dagger:hilt-android-compiler:${versions.hilt}"
    //router
    kapt "cn.therouter:apt:${versions.therouter}"
    implementation "cn.therouter:router:${versions.therouter}"

    debugImplementation "com.squareup.leakcanary:leakcanary-android:${versions.leakcanary}"
    debugImplementation "com.github.markzhai:blockcanary-android:${versions.blockcanary}"
    releaseImplementation "com.github.markzhai:blockcanary-no-op:${versions.blockcanary}"

    testImplementation "junit:junit:${versions.junit}"
    androidTestImplementation "androidx.test.ext:junit:${versions.junitKtx}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${versions.espresso}"
}

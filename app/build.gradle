plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
//    id 'com.google.devtools.ksp' version '1.7.20-1.0.7'
    id 'dagger.hilt.android.plugin'
}

apply from: '../dependencies.gradle'

def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(new File("${project.getProjectDir()}/keystore.properties")))

android {
    namespace 'com.mcgrady.xproject'
    compileSdk versions.compileSdk

    defaultConfig {
        applicationId "com.mcgrady.xproject"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['releaseKeyAlias']
            keyPassword keystoreProperties['releaseKeyPassword']
            storeFile file(keystoreProperties['releaseStoreFile'])
            storePassword keystoreProperties['releaseStorePassword']
        }
        debug {
            keyAlias keystoreProperties['debugKeyAlias']
            keyPassword keystoreProperties['debugKeyPassword']
            storeFile file(keystoreProperties['debugStoreFile'])
            storePassword keystoreProperties['debugStorePassword']
        }
    }

    buildTypes {
        release {
            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type.
            minifyEnabled false
            zipAlignEnabled = false
            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            shrinkResources false
            // Includes the default ProGuard rules files that are packaged with
            // the Android Gradle plugin. To learn more, go to the section about
            // R8 configuration files.
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // As of Gradle Android plugin 1.1.0, the test APK has a separate config
            testProguardFile 'proguard-rules-test.pro'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

//    kotlin {
//        sourceSets {
//            main.kotlin.srcDirs += 'build/generated/ksp/main/kotlin'
//            test.kotlin.srcDirs += 'build/generated/ksp/test/kotlin'
//        }
//    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }
}

dependencies {
    implementation project(':common-core')

    //hilt
    implementation "com.google.dagger:hilt-android:${versions.hilt}"
    kapt "com.google.dagger:hilt-android-compiler:${versions.hilt}"

    implementation 'com.tencent.vasdolly:helper:3.0.4'

    testImplementation "junit:junit:${versions.junit}"
    testImplementation "org.mockito:mockito-core:${versions.mockito}"
    testImplementation "org.mockito.kotlin:mockito-kotlin:${versions.mockito}"
    testImplementation "org.robolectric:robolectric:${versions.robolectric}"
    testImplementation "com.squareup.okhttp3:mockwebserver:${versions.okhttp}"
    testImplementation "androidx.arch.core:core-testing:${versions.archCoreTesting}"

    androidTestImplementation "androidx.test.ext:junit-ktx:${versions.junitKtx}"
    androidTestImplementation "androidx.test:core-ktx:${versions.androidxTestCore}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${versions.espresso}"

    debugImplementation "com.squareup.leakcanary:leakcanary-android:${versions.leakcanary}"
    debugImplementation "com.github.markzhai:blockcanary-android:${versions.blockcanary}"
}

apply from: '../config.gradle'
apply from: 'multiple-channel.gradle'

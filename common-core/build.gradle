plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

apply from: '../dependencies.gradle'

android {
    compileSdk versions.compileSdk

    defaultConfig {
        minSdk versions.minSdk
        targetSdk versions.targetSdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
//    api ("io.github.mcgrady-dev:xarch:${versions.xarchSnapshot}) {
//        changing = true
//    }
    api "io.github.mcgrady-dev:xarch:${versions.xarch}"

    api "androidx.annotation:annotation:${versions.annotation}"
    api "androidx.constraintlayout:constraintlayout:${versions.constraintLayout}"

    //coroutines
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.coroutines}"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.coroutines}"

    //network
    api "com.squareup.okhttp3:okhttp:${versions.okhttp}"
    api "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"
    api "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    api "com.squareup.retrofit2:converter-gson:${versions.retrofit}"
    api "com.google.code.gson:gson:${versions.gson}"
    api ("com.github.skydoves:sandwich:${versions.sandwich}") {
        exclude module: 'okhttp'
        exclude module: 'retrofit'
    }

//    api 'com.blankj:utilcodex:1.31.0'
    api "com.jakewharton.timber:timber:${versions.timber}"

    //room
    implementation("androidx.room:room-runtime:${versions.room}")
    kapt("androidx.room:room-common:${versions.room}")

    api "io.reactivex.rxjava3:rxjava:${versions.rxJava}"
    api "io.reactivex.rxjava3:rxandroid:${versions.rxAndroid}"

    //hilt
    implementation "com.google.dagger:hilt-android:${versions.hilt}"
    kapt "com.google.dagger:hilt-android-compiler:${versions.hilt}"

    api 'com.gitee.zackratos:UltimateBarX:0.7.1'

    testImplementation "junit:junit:${versions.junit}"
    androidTestImplementation "androidx.test.ext:junit-ktx:${versions.junitKtx}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${versions.espresso}"
}

//Enable when using snapshot version
/*configurations.all {
    // Don't cache changing modules at all.
    resolutionStrategy.cacheChangingModulesFor 10, 'minutes'
}*/

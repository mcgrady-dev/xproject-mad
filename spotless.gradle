apply plugin: 'com.diffplug.spotless'

spotless {
    // optional: limit format enforcement to just the files changed by this feature branch
    //ratchetFrom 'origin/develop'

    format 'misc', {
        // define the files to apply `misc` to
        target '*.gradle', '*.md', '.gitignore'

        // define the steps to apply to those files
        trimTrailingWhitespace()
        indentWithSpaces()
        endWithNewline()
    }

    kotlin {
        target "**/*.kt"
        ktlint("0.45.2")
                .userData([
                        'disabled_rules': 'no-wildcard-imports'
                ])
        licenseHeaderFile "$rootDir/license.kt"
        trimTrailingWhitespace()
        indentWithSpaces(4)
        endWithNewline()
    }
}

//preBuild.dependsOn spotlessCheck
//preBuild.dependsOn spotlessApply

task createSpotlessPreCommitHook() {
    def gitHooksDirectory = new File("$project.rootDir/.git/hooks/")
    if (!gitHooksDirectory.exists()) gitHooksDirectory.mkdirs()
    new File("$project.rootDir/.git/hooks", "pre-commit").text = """
#!/bin/bash
echo "Running spotless check"
set -e
    ./gradlew -PdisableSpotlessCheck spotlessApply
"""
    "chmod +x .git/hooks/pre-commit".execute()
}

//tasks.register('updateGitHooks', Copy) {
//    from './scripts/pre-commit'
//    into './.git/hooks'
//}
//compileJava.dependsOn updateGitHooks